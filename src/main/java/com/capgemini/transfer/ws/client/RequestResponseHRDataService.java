package com.capgemini.transfer.ws.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.12
 * 2017-07-11T11:46:17.751+08:00
 * Generated source version: 3.1.12
 * 
 */
@WebServiceClient(name = "RequestResponseHRDataService", 
                  wsdlLocation = "https://onboarding15.sapsf.cn/ONBPREM/Services/HRDataServiceEx.asmx?WSDL",
                  targetNamespace = "http://ATS.online-onboarding.com/Client/HRDataServiceEx") 
public class RequestResponseHRDataService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://ATS.online-onboarding.com/Client/HRDataServiceEx", "RequestResponseHRDataService");
    public final static QName RequestResponseHRDataBinding1 = new QName("http://ATS.online-onboarding.com/Client/HRDataServiceEx", "RequestResponseHRDataBinding1");
    public final static QName RequestResponseHRDataBinding = new QName("http://ATS.online-onboarding.com/Client/HRDataServiceEx", "RequestResponseHRDataBinding");
    static {
        URL url = null;
        try {
            url = new URL("https://onboarding15.sapsf.cn/ONBPREM/Services/HRDataServiceEx.asmx?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(RequestResponseHRDataService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "https://onboarding15.sapsf.cn/ONBPREM/Services/HRDataServiceEx.asmx?WSDL");
        }
        WSDL_LOCATION = url;
    }

    public RequestResponseHRDataService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public RequestResponseHRDataService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RequestResponseHRDataService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
//    public RequestResponseHRDataService(WebServiceFeature ... features) {
//        super(WSDL_LOCATION, SERVICE, features);
//    }
//
//    public RequestResponseHRDataService(URL wsdlLocation, WebServiceFeature ... features) {
//        super(wsdlLocation, SERVICE, features);
//    }
//
//    public RequestResponseHRDataService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
//        super(wsdlLocation, serviceName, features);
//    }    




    /**
     *
     * @return
     *     returns RequestResponseHRDataBinding
     */
    @WebEndpoint(name = "RequestResponseHRDataBinding1")
    public RequestResponseHRDataBinding getRequestResponseHRDataBinding1() {
        return super.getPort(RequestResponseHRDataBinding1, RequestResponseHRDataBinding.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RequestResponseHRDataBinding
     */
    @WebEndpoint(name = "RequestResponseHRDataBinding1")
    public RequestResponseHRDataBinding getRequestResponseHRDataBinding1(WebServiceFeature... features) {
        return super.getPort(RequestResponseHRDataBinding1, RequestResponseHRDataBinding.class, features);
    }


    /**
     *
     * @return
     *     returns RequestResponseHRDataBinding
     */
    @WebEndpoint(name = "RequestResponseHRDataBinding")
    public RequestResponseHRDataBinding getRequestResponseHRDataBinding() {
        return super.getPort(RequestResponseHRDataBinding, RequestResponseHRDataBinding.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RequestResponseHRDataBinding
     */
    @WebEndpoint(name = "RequestResponseHRDataBinding")
    public RequestResponseHRDataBinding getRequestResponseHRDataBinding(WebServiceFeature... features) {
        return super.getPort(RequestResponseHRDataBinding, RequestResponseHRDataBinding.class, features);
    }

}
